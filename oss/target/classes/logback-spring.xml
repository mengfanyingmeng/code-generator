<?xml version="1.0" encoding="UTF-8"?>
<configuration scan="true" scanPeriod="60 seconds" debug="false">

	<property name="LOG_CHARSET" value="UTF-8" />
	<springProperty scope="context" name="APP_NAME" source="spring.application.name" defaultValue="default-server"/>
	<property name="LOG_FILE_NAME" value="server" />
	<contextName>${APP_NAME}</contextName>
	<property name="MaxHistory" value="90" />
	<property name="MaxFileSize" value="100MB" />

	<!-- 没有ANSI color的配置-->
	<property name="CONSOLE_LOG_PATTERN" value=" [%X{invokeNo}] [%X{userId}] %d{yyyy-MM-dd HH:mm:ss.SSS} -%5p ${PID:- } --- [%15.15t] %contextName  %-40.40logger{39} : %m%n" />
	<property name="FILE_LOG_PATTERN"    value=" [%X{invokeNo}] [%X{userId}] %d{yyyy-MM-dd HH:mm:ss.SSS} %-5level ${PID:- } --- [%t] %contextName  %-40.40logger{39} : %m%n" />

    <property name="CONSOLE_LOG_PATTERN_ORIGIN" value=" [%X{invokeNo}] [%X{userId}]  %clr(%d{yyyy-MM-dd HH:mm:ss.SSS}){faint} %clr(${LOG_LEVEL_PATTERN:-%5p}) %clr(${PID:- }){magenta} %clr(---){faint} %clr([%15.15t]){faint} %clr(%contextName){magenta} %clr(%-40.40logger{39}){cyan} %clr(:){faint} %m%n${LOG_EXCEPTION_CONVERSION_WORD:-%wEx}" />
	<property name="FILE_LOG_PATTERN_ORIGIN" value="[%tid] [%X{invokeNo}] [%X{userId}] %d{yyyy-MM-dd HH:mm:ss.SSS} ${LOG_LEVEL_PATTERN:-%5p} ${PID:- } --- [%t] [%contextName] %-40.40logger{39} : %m%n${LOG_EXCEPTION_CONVERSION_WORD:-%wEx}" />

	<!-- 彩色日志依赖的渲染类 -->
	<conversionRule conversionWord="clr" converterClass="org.springframework.boot.logging.logback.ColorConverter" />
	<conversionRule conversionWord="wex" converterClass="org.springframework.boot.logging.logback.WhitespaceThrowableProxyConverter" />
	<conversionRule conversionWord="wEx" converterClass="org.springframework.boot.logging.logback.ExtendedWhitespaceThrowableProxyConverter" />

	<springProfile name="local">
		<property name="LOG_LEVEL" value="INFO" />
		<property name="LOG_DIR" value="d:/logs/${APP_NAME}" />
	</springProfile>
	<springProfile name="dev, abroad-dev">
		<property name="LOG_LEVEL" value="INFO" />
		<property name="LOG_DIR" value="d:/logs/${APP_NAME}" />
	</springProfile>
	<springProfile name="test, abroad-test">
		<property name="LOG_LEVEL" value="INFO" />
		<property name="LOG_DIR" value="/data/TSP_LOG/${APP_NAME}" />
	</springProfile>
	<springProfile name="test-ali, abroad-test, korea-test, europe-test">
		<property name="LOG_LEVEL" value="INFO" />
		<property name="LOG_DIR" value="/data/TSP_LOG/${APP_NAME}" />
	</springProfile>
	<springProfile name="uat, abroad-uat">
		<property name="LOG_LEVEL" value="INFO" />
		<property name="LOG_DIR" value="/data/TSP_LOG/${APP_NAME}" />
	</springProfile>
	<springProfile name="prod, abroad-prod, korea-prod, europe-prod">
		<property name="LOG_LEVEL" value="INFO" />
		<property name="LOG_DIR" value="/data/TSP_LOG/${APP_NAME}" />
	</springProfile>


	<!--输出到控制台 ,名字必须：console-->
	<appender name="console" class="ch.qos.logback.core.ConsoleAppender">
		<!-- <filter class="ch.qos.logback.classic.filter.ThresholdFilter"> 
			<level>${LOG_LEVEL}</level>
		</filter>  -->
		<encoder>
			<charset>${LOG_CHARSET}</charset>
			<Pattern>${CONSOLE_LOG_PATTERN_ORIGIN}</Pattern>
		</encoder>
	</appender>

	<!--输出到文件 -->
	<appender name="file" class="ch.qos.logback.core.rolling.RollingFileAppender">
		<file>${LOG_DIR}/${LOG_FILE_NAME}.log</file>
		<!-- <filter class="ch.qos.logback.classic.filter.ThresholdFilter">
			<level>${LOG_LEVEL}</level>
		</filter> --> 
		<rollingPolicy class="ch.qos.logback.core.rolling.TimeBasedRollingPolicy">
			<fileNamePattern>${LOG_DIR}/${LOG_FILE_NAME}.%d{yyyy-MM-dd}-%i.log</fileNamePattern>
			<maxHistory>${MaxHistory}</maxHistory>
			<timeBasedFileNamingAndTriggeringPolicy class="ch.qos.logback.core.rolling.SizeAndTimeBasedFNATP">
            	<maxFileSize>${MaxFileSize}</maxFileSize>
        	</timeBasedFileNamingAndTriggeringPolicy>
		</rollingPolicy>
		<encoder class="ch.qos.logback.core.encoder.LayoutWrappingEncoder">
			<charset>${LOG_CHARSET}</charset>
			<layout class="org.apache.skywalking.apm.toolkit.log.logback.v1.x.TraceIdPatternLogbackLayout">
				<pattern>${FILE_LOG_PATTERN_ORIGIN}</pattern>
			</layout>
		</encoder>
	</appender>

	<!--输出到error文件 -->
	<appender name="file_error" class="ch.qos.logback.core.rolling.RollingFileAppender">
		<file>${LOG_DIR}/${LOG_FILE_NAME}.error.log</file>
		<filter class="ch.qos.logback.classic.filter.ThresholdFilter">
			<level>ERROR</level>
		</filter>
		<rollingPolicy class="ch.qos.logback.core.rolling.TimeBasedRollingPolicy">
			<fileNamePattern>${LOG_DIR}/${LOG_FILE_NAME}.%d{yyyy-MM-dd}-%i.error.log</fileNamePattern>
			<maxHistory>${MaxHistory}</maxHistory>
			<timeBasedFileNamingAndTriggeringPolicy class="ch.qos.logback.core.rolling.SizeAndTimeBasedFNATP">
				<maxFileSize>${MaxFileSize}</maxFileSize>
			</timeBasedFileNamingAndTriggeringPolicy>
		</rollingPolicy>
		<encoder>
			<charset>${LOG_CHARSET}</charset>
			<Pattern>${FILE_LOG_PATTERN_ORIGIN}</Pattern>
		</encoder>
	</appender>


	<!-- *************  sql log start************* -->
	<!-- mybatis -->
	<logger name="com.oss" level="INFO"/>
	<logger name="java.sql.Connection" level="DEBUG"/>
	<logger name="java.sql.Statement" level="DEBUG"/>
	<logger name="java.sql.PreparedStatement" level="DEBUG"/>
	<!-- *************  sql log   end************* -->

	<logger name="com.yadea.iot.tsp.soa.user.mapper" level="${LOG_LEVEL}"/>
	<logger name="com.yadea.iot.tsp.soa.client.feign" level="${LOG_LEVEL}"/>

	<root level="${LOG_LEVEL}">
		<appender-ref ref="console" />
		<appender-ref ref="file" />
		<appender-ref ref="file_error" />
	</root>
	
</configuration>